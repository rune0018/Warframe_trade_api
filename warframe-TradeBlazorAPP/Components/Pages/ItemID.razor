@page "/items/{id}"

<h3>itemID @Id</h3>
@* <SFChart>
    <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.DateTime" LabelFormat="yyyy-MM-dd"></ChartPrimaryXAxis>
    <ChartSeriesCollection>
        <ChartSeries DataSource="@ChartData" XName="time" YName="price"></ChartSeries>
    </ChartSeriesCollection>
</SFChart> *@
<h3>price : time</h3>
@foreach(var order in ChartData)
{
    <h3>@order.price : @order.time</h3>
}
@code {
    [Parameter]
    public string Id { get; set; } = "hejsa";

    public List<Chartdat> ChartData { get; set; }

    public class Chartdat
    {
        public double price { get; set; }
        public DateTime time { get; set; }
    }
    protected override void OnInitialized()
    {
        List<warframe_TradeBlazorAPP.Components.models.Item> items = new();
        using (HttpClient client = new())
        {
            HttpResponseMessage messege = client.GetAsync($"{Environment.GetEnvironmentVariable("Endpoint")}/{Id}/orders").Result;

            ChartData = new();
            ChartData.AddRange(new List<Chartdat>()
            {
                new Chartdat(){time=DateTime.Now.AddDays(-1),price=double.Parse( messege.Content.ReadAsStringAsync().Result)-1 },
                new Chartdat(){time=DateTime.Now.AddDays(-2),price=double.Parse( messege.Content.ReadAsStringAsync().Result)-2 },
                new Chartdat(){time=DateTime.Now.AddDays(-3),price=double.Parse( messege.Content.ReadAsStringAsync().Result)-3 }
            });
        }
    }
}
